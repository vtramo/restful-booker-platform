version: '3.7'
services:
  rbp-booking:
    networks:
      jenkins:
    image: ${DOCKER_REGISTRY_URL-}rbp-booking:latest
    environment:
      - MESSAGE_SERVICE_URL=rbp-message
    ports:
      - "3000:3000"
    depends_on:
      rbp-message:
        condition: service_started
      rbp-auth:
        condition: service_started
    restart: always

  rbp-room:
    networks:
      jenkins:
    image: ${DOCKER_REGISTRY_URL-}rbp-room:latest
    environment:
        ROOM_DB_JDBC_URL: "jdbc:postgresql://postgres:5432/test?loggerLevel=OFF"
        ROOM_DB_JDBC_USERNAME: "postgres"
        ROOM_DB_JDBC_PASSWORD: "postgres"
    ports:
      - "3001:3001"
    depends_on:
      rbp-auth:
        condition: service_started
      postgres:
        condition: service_started
    restart: always

  rbp-branding:
    networks:
      jenkins:
    image: ${DOCKER_REGISTRY_URL-}rbp-branding:latest
    ports:
      - "3002:3002"
    depends_on:
      rbp-auth:
        condition: service_started
    restart: always

  rbp-assets:
    networks:
      jenkins:
    image: ${DOCKER_REGISTRY_URL-}rbp-assets:latest
    ports:
      - "3003:3003"
    depends_on:
      rbp-proxy:
        condition: service_started
    restart: always

  rbp-auth:
    networks:
      jenkins:
    image: ${DOCKER_REGISTRY_URL-}rbp-auth:latest
    environment:
        AUTH_DB_JDBC_URL: jdbc:postgresql://postgres:5432/test?loggerLevel=OFF
        AUTH_DB_JDBC_USERNAME: postgres
        AUTH_DB_JDBC_PASSWORD: postgres
    ports:
      - "3004:3004"
    depends_on:
      postgres:
        condition: service_started
    restart: always

  rbp-report:
    networks:
      jenkins:
    image: ${DOCKER_REGISTRY_URL-}rbp-report:latest
    environment:
      - BOOKING_SERVICE_URL=rbp-booking
      - ROOM_SERVICE_URL=rbp-room
    ports:
      - "3005:3005"
    depends_on:
      rbp-room:
        condition: service_started
      rbp-booking:
        condition: service_started
    restart: always

  rbp-message:
    networks:
      jenkins:
    image: ${DOCKER_REGISTRY_URL-}rbp-message:latest
    ports:
      - "3006:3006"
    depends_on:
      rbp-auth:
        condition: service_started
    restart: always

  rbp-proxy:
    networks:
      jenkins:
    image: nginx:alpine
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "8080:8080"
    depends_on:
      rbp-report:
        condition: service_started
      rbp-auth:
        condition: service_started
      rbp-booking:
        condition: service_started
      rbp-room:
        condition: service_started
      rbp-message:
        condition: service_started
      rbp-branding:
        condition: service_started
    restart: always

  postgres:
    networks:
      jenkins:
    image: postgres:15.2-alpine
    build:
      context: .
      dockerfile: Dockerfile.postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test
    ports:
      - "5432:5432"

networks:
  jenkins:
    external: true

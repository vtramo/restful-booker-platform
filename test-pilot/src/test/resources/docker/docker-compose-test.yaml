version: '3.7'

x-external-networks: &external-networks
  networks:
    rbp-network:
      name: ${RBP_E2E_DOCKER_NETWORK:-jenkins}
      external: true

x-networks: &networks
  networks:
    - rbp-network

services:
  rbp-booking:
    <<: *networks
    image: ${DOCKER_REGISTRY_URL-}/rbp-booking:latest
    environment:
      - MESSAGE_SERVICE_URL=rbp-message
    expose:
      - "3000"
    depends_on:
      rbp-message:
        condition: service_started
      rbp-auth:
        condition: service_started
    restart: always
    healthcheck:
      test: curl http://localhost:3000/message/actuator/health
      interval: 7s
      timeout: 5s
      retries: 3
      start_period: 10s

  rbp-room:
    <<: *networks
    image: ${DOCKER_REGISTRY_URL-}/rbp-room:latest
    environment:
        ROOM_DB_JDBC_URL: "jdbc:postgresql://postgres:5432/test?loggerLevel=OFF"
        ROOM_DB_JDBC_USERNAME: "postgres"
        ROOM_DB_JDBC_PASSWORD: "postgres"
    expose:
      - "3001"
    depends_on:
      rbp-auth:
        condition: service_started
      postgres:
        condition: service_started
    restart: always
    healthcheck:
      test: curl http://localhost:3001/room/actuator/health
      interval: 7s
      timeout: 5s
      retries: 3
      start_period: 10s

  rbp-branding:
    <<: *networks
    image: ${DOCKER_REGISTRY_URL-}/rbp-branding:latest
    expose:
      - "3002"
    depends_on:
      rbp-auth:
        condition: service_started
    restart: always
    healthcheck:
      test: curl http://localhost:3002/branding/actuator/health
      interval: 7s
      timeout: 5s
      retries: 3
      start_period: 10s

  rbp-assets:
    <<: *networks
    image: ${DOCKER_REGISTRY_URL-}/rbp-assets:1.0
    expose:
      - "3003"
    depends_on:
      rbp-proxy:
        condition: service_started
    restart: always

  rbp-auth:
    <<: *networks
    image: ${DOCKER_REGISTRY_URL-}/rbp-auth:latest
    environment:
        AUTH_DB_JDBC_URL: jdbc:postgresql://postgres:5432/test?loggerLevel=OFF
        AUTH_DB_JDBC_USERNAME: postgres
        AUTH_DB_JDBC_PASSWORD: postgres
    expose:
      - "3004"
    depends_on:
      postgres:
        condition: service_started
    restart: always
    healthcheck:
      test: curl http://localhost:3004/auth/actuator/health
      interval: 7s
      timeout: 5s
      retries: 3
      start_period: 10s

  rbp-report:
    <<: *networks
    image: ${DOCKER_REGISTRY_URL-}/rbp-report:latest
    environment:
      - BOOKING_SERVICE_URL=rbp-booking
      - ROOM_SERVICE_URL=rbp-room
    expose:
      - "3005"
    depends_on:
      rbp-room:
        condition: service_started
      rbp-booking:
        condition: service_started
    restart: always
    healthcheck:
      test: curl http://localhost:3005/report/actuator/health
      interval: 7s
      timeout: 5s
      retries: 3
      start_period: 10s

  rbp-message:
    <<: *networks
    image: ${DOCKER_REGISTRY_URL-}/rbp-message:latest
    expose:
      - "3006"
    depends_on:
      rbp-auth:
        condition: service_started
    restart: always
    healthcheck:
      test: curl http://localhost:3005/message/actuator/health
      interval: 7s
      timeout: 5s
      retries: 3
      start_period: 10s

  rbp-proxy:
    <<: *networks
    image: nginx:alpine
    build:
      context: .
      dockerfile: Dockerfile.nginx
    expose:
      - "8080"
    depends_on:
      rbp-report:
        condition: service_started
      rbp-auth:
        condition: service_started
      rbp-booking:
        condition: service_started
      rbp-room:
        condition: service_started
      rbp-message:
        condition: service_started
      rbp-branding:
        condition: service_started
    restart: always

  postgres:
    <<: *networks
    image: postgres:15.2-alpine
    build:
      context: .
      dockerfile: Dockerfile.postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test
    expose:
      - "5432"

<<: *external-networks
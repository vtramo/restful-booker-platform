version: '3.7'
services:
  rbp-booking:
    container_name: rbp-booking
    image: restful-booker-platform-booking:1.0
    build:
      context: ./booking
      dockerfile: Dockerfile
    networks:
      app:
    ports:
      - "3000:3000"
    depends_on:
      rbp-message:
        condition: service_started
      rbp-auth:
        condition: service_started
    restart: always

  rbp-room:
    container_name: rbp-room
    image: restful-booker-platform-room:1.0
    build:
      context: ./room
      dockerfile: Dockerfile
    networks:
      app:
    environment:
      ROOM_DB_JDBC_URL: jdbc:postgresql://postgres:5432/test?loggerLevel=OFF
      ROOM_DB_JDBC_USERNAME: postgres
      ROOM_DB_JDBC_PASSWORD: postgres
    ports:
      - "3001:3001"
    depends_on:
      rbp-auth:
        condition: service_started
      postgres:
        condition: service_started
    restart: always

  rbp-branding:
    image: restful-booker-platform-branding:1.0
    container_name: rbp-branding
    build:
      context: ./branding
      dockerfile: Dockerfile
    networks:
      app:
    ports:
      - "3002:3002"
    depends_on:
      rbp-auth:
        condition: service_started
    restart: always

  rbp-assets:
    image: restful-booker-platform-assets:1.0
    container_name: rbp-assets
    build:
      context: ./assets
      dockerfile: Dockerfile
    networks:
      app:
    ports:
      - "3003:3003"
    depends_on:
      rbp-proxy:
        condition: service_started
    restart: always

  rbp-auth:
    image: restful-booker-platform-auth:1.0
    container_name: rbp-auth
    build:
      context: ./auth
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_started
    networks:
      app:
    environment:
      AUTH_DB_JDBC_URL: jdbc:postgresql://postgres:5432/test?loggerLevel=OFF
      AUTH_DB_JDBC_USERNAME: postgres
      AUTH_DB_JDBC_PASSWORD: postgres
    ports:
      - "3004:3004"
    restart: always

  rbp-report:
    image: restful-booker-platform-report:1.0
    container_name: rbp-report
    build:
      context: ./report
      dockerfile: Dockerfile
    networks:
      app:
    ports:
      - "3005:3005"
    depends_on:
      rbp-room:
        condition: service_started
      rbp-booking:
        condition: service_started
    restart: always

  rbp-message:
    container_name: rbp-message
    image: restful-booker-platform-message:1.0
    build:
      context: ./message
      dockerfile: Dockerfile
    networks:
      app:
    ports:
      - "3006:3006"
    depends_on:
      rbp-auth:
        condition: service_started
    restart: always

  rbp-proxy:
    image: nginx:alpine
    networks:
      app:
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:8080"
    depends_on:
      rbp-report:
        condition: service_started
      rbp-auth:
        condition: service_started
      rbp-booking:
        condition: service_started
      rbp-room:
        condition: service_started
      rbp-message:
        condition: service_started
      rbp-branding:
        condition: service_started
    restart: always

  postgres:
    image: postgres:15.2-alpine
    networks:
      app:
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test
    ports:
      - "5432:5432"

networks:
  app: